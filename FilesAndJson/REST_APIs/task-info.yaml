type: edu
files:
- name: test.txt
  visible: true
  text: |
    Name:The Simpsons
    Link:https://www.tvmaze.com/shows/83/the-simpsons
    Premiered:1989-12-17
    Rating average:8.2
    Summary:<p><b>The Simpsons</b> is the longest running scripted show in US television history. It captures the adventures of Homer, Marge, Maggie, Bart and Lisa who are living in a fictional town called Springfield.</p>
    Name:The Simpsons Shorts
    Link:https://www.tvmaze.com/shows/56220/the-simpsons-shorts
    Premiered:2021-05-04
    Rating average:null
    Summary:<p>A series featuring characters from <b>The Simpsons</b> in brand new short films.</p>
    Name:Jessica Simpson's The Price of Beauty
    Link:https://www.tvmaze.com/shows/2113/jessica-simpsons-the-price-of-beauty
    Premiered:2010-03-15
    Rating average:null
    Summary:<p>Jessica Simpson is embarking on a world tour...but this time it has nothing to do with music. Jessica, along with her two best friends, Ken Paves and CaCee Cobb, are traveling the globe to explore how different cultures define beauty and the extraordinary lengths that women will go to in order to achieve it.</p><p>Journeying from Tokyo and Thailand, to Paris and Rio, to Uganda, Morocco and India -- the cast is met in each city by a "beauty ambassador" who helps them tackle topics revolving around fashion, fitness, diet and outlandish spa treatments. In each country, Jessica, Ken and CaCee experience firsthand some of the local beauty rituals, from drinking cow urine in India, to being buried up to their necks in Tokyo, to drinking gourds of ghee in a fattening hut in Uganda. But it's not all fun and games -- Jessica also explores the high price that some women pay to feel beautiful. Imagine the plight of women in Northern Thailand, who wear 20-pound rings around their necks, crushing their clavicles, to a mother in Rio who cannot afford electricity, but is secretly saving for butt implants.</p><p>Each episode ends in a complete transformation of the cast. Imagine Jessica, Ken and CaCee dressed in ornate kaftans, or camel-back riding to a festive Moroccan party complete with belly dancers and live musicians.</p><p>As Jessica learns how beauty is defined across the globe, and how she "measures up," and her own definition of the word, she is challenged to redefine it along the way, allowing the audience to see a personal, vulnerable and oftentimes hilarious side of Jessica Simpson.</p><p>Each episode culminates in a complete transformation of the cast -- Imagine Jessica, Ken and CaCee dressed in ornate kaftans, riding camel-back to a festive Moroccan party, complete with belly dancers and live musicians. They talk to local women and dance the night away Moroccan style.</p><p>As Jessica learns how beauty is defined in far away lands, her own sense of beauty, and how she "measures up" is challenged and redefined along the way, allowing the audience to see a personal, and often times, vulnerable and hilarious side of Jessica Simpson.</p>
    Name:Paul Merton in Galton & Simpson's...
    Link:https://www.tvmaze.com/shows/11122/paul-merton-in-galton-simpsons
    Premiered:1996-01-26
    Rating average:null
    Summary:<p>British TV comedy series. Top British comedy writers Galton and Simpson utilise the talents of comedian Paul Merton to revisit some of their past glories. Merton's deadpan delivery, a la Tony Hancock, is perfectly suited to showcase these classic sketches from a golden era in British comedy.</p>
    Name:Simon's Cat
    Link:https://www.tvmaze.com/shows/6141/simons-cat
    Premiered:2008-03-04
    Rating average:7.3
    Summary:<p><b>Simon's Cat</b> is an animated series featuring the mischievous and often hilarious antics of a fat white cat and his owner Simon.</p>
    Name:Todd Sampson's Body Hack
    Link:https://www.tvmaze.com/shows/22350/todd-sampsons-body-hack
    Premiered:2016-10-04
    Rating average:null
    Summary:<p>Filmed around the world over a period of six months, Todd will take on some of the biggest challenges of his life as he embarks on an epic exploration, investigating some of the world's most extraordinary people. He deconstructs and decodes how these incredible people live, what they do differently from the rest of us and how this impacts the human body.</p>
    Name:The Ashlee Simpson Show
    Link:https://www.tvmaze.com/shows/35131/the-ashlee-simpson-show
    Premiered:2004-06-16
    Rating average:null
    Summary:<p>Already a phenomenon at only 19 years old, Ashlee Simpson is ready to take it to the next level. We'll follow Ashlee every step of the way, as she signs her first record deal, writes her songs, auditions her band and records her very first album. Aside from the process of making her album, Ashlee lets us in on her life, and her various relationships with friends, family and of course, boys. We see the break-up with her boyfriend and then watch, as it becomes a song on her album. From band practice to label meetings, to album cover shoots and everything in between, Ashlee gives us full access to the entire process, taking us through to the album release and the band's first time ever on stage together.</p>
    Name:Gene Simmons: Family Jewels
    Link:https://www.tvmaze.com/shows/8623/gene-simmons-family-jewels
    Premiered:2006-08-07
    Rating average:null
    Summary:<p>Welcome to the unconventional family life of KISS front man Gene Simmons. Simmons and actress Shannon Tweed have been happily unmarried for twenty years and have two children, Nick and Sophie. <b>Gene Simmons: Family Jewels</b> reveals a side of Gene that has remained hidden until now. See the softer side of this metal manic as he balances his rock star life with his role as a dad.</p>
    Name:Todd Sampson's Life on the Line
    Link:https://www.tvmaze.com/shows/26023/todd-sampsons-life-on-the-line
    Premiered:2017-03-21
    Rating average:null
    Summary:<p>Todd Sampson puts his faith in science to the ultimate test in a series of epic experiments, trusting his life to the laws of physics.</p>
    Name:Running Russell Simmons
    Link:https://www.tvmaze.com/shows/23863/running-russell-simmons
    Premiered:2010-11-02
    Rating average:null
    Summary:<p>A reality series following hip-hop and fashion mogul Russell Simmons and his band of assistants as they help to manage his business deals, family life, and party planning.</p>
  learner_created: false
- name: src/Task.java
  visible: true
  text: |-
    import com.github.cliftonlabs.json_simple.JsonObject;

    public class Task {
        public static void main(String[] args){
            TVShowsDatabase ord = new TVShowsDatabase();
            try {
                JsonObject shows = ord.getShowsByName("simpsons");
                String simpsons = ord.formatShowAsString(shows);
                JsonObject kk = ord.getPeopleInShows("Ralph%20Maccio");
                System.out.println(simpsons);
                System.out.println(kk.get("result"));
                ord.saveShows(simpsons,"simpsons.txt");
            }catch (Exception e){
                e.printStackTrace();
            }
        }
    }
  learner_created: false
- name: test/Tests.java
  visible: false
  text: |-
    import com.github.cliftonlabs.json_simple.JsonArray;
    import com.github.cliftonlabs.json_simple.JsonObject;

    import org.junit.Assert;
    import org.junit.Before;
    import org.junit.Test;

    import java.io.File;

    public class Tests {
      private TVShowsDatabase ord;
      private JsonObject obj1,obj2;
      private JsonArray arr1,arr2;

      @Before
      public void setEnv(){
        ord = new TVShowsDatabase();
        try {
          obj1 = ord.getShowsByName("simpsons");
          obj2 = ord.getPeopleInShows("Ralph Maccio");
        }catch(Exception e){
          Assert.fail("Your Methods for getShowByName or getPeopleInShows... are throwing an exception when they shouldn't:\n"+e.getMessage());
        }

        arr1 = (JsonArray) obj1.get("result");
        arr2 = (JsonArray) obj2.get("result");

      }

      @Test
      public void testRetrieval() {
        // put your test here
        String list=null;
        int elems = arr1.size();
        String name = (String)((JsonObject)arr1.get(0)).get("name");
        String dob = (String)((JsonObject)((JsonObject)arr2.get(0)).get("person")).get("birthday");
        list = ord.formatShowAsString(obj1);
        Assert.assertEquals("Are you reading/converting the full JSON document?",10,elems);
      }

      @Test
      public void testReturningJsonDocs(){
        Assert.assertTrue("Are your shows coming as a JsonArray?",arr1.size()>2 && arr1.size()<11);
        Assert.assertTrue("Are your people searches coming as a JsonArray?",arr2.size()>0 && arr2.size()<5);
      }

      @Test
      public void testContent(){
        String person = ""+((JsonObject)arr2.get(0)).get("person");
        System.out.println(person);
        Assert.assertTrue("Are you sure you are querying the right thing on getPeopleInShows method?", person.contains("69979"));
      }
      @Test
      public void testJSONStructure(){
        //System.out.println(((JsonObject)arr1.get(0)));
        JsonObject obj11=((JsonObject)arr1.get(0));
        JsonObject obj21=((JsonObject)arr2.get(0));
        String site = (String)((JsonObject)obj11.get("show")).get("url");
        String kk = (String)((JsonObject)obj21.get("person")).get("birthday");
        String list = ord.formatShowAsString(obj1);
        Assert.assertTrue("Are you returning the full JsonObject for the show search?",site.contains("tvmaze.com"));
        Assert.assertTrue("Are you returning the correct JSON for the people search?",kk.equals("1961-11-04"));
        Assert.assertTrue("Are you formatting the Json as String correctly?",list.contains("Jessica"));
      }

      @Test
      public void testWriteDoc(){
        String list = ord.formatShowAsString(obj1);
        ord.saveShows(list,"test.txt");
        try{
          File f = new File("test.txt");
          Assert.assertTrue("Are you sure you are saving a file with the name that comes in the parameter?",f.exists());
          Assert.assertEquals("Are you writing the file as directed?",f.length(),list.length());
        }catch(SecurityException e){
          Assert.fail("Are you saving the file with ANY filename that is passed?");
        }
      }
    }
  learner_created: false
- name: src/TVShowsDatabase.java
  visible: true
  placeholders:
  - offset: 415
    length: 241
    placeholder_text: |-
      Create a method getURLSource that returns a String and gets a URL object as a parameter. It should also throw an exception.
      This method should read the open stream of the url and concatenate it in a String. It should then return that String.
    initial_state:
      length: 241
      offset: 415
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |2-
          public String getURLSource(URL url) throws IOException{
              // This is like reading from the keyboard...
              Scanner scan = new Scanner(url.openStream());
              String result="";
              while (scan.hasNext())
              {
                  result += scan.nextLine();

              }
              scan.close();
              return "{\"result\":"+result+"}";
          }
  - offset: 840
    length: 166
    placeholder_text: "/* TODO \nYou have to use the url to retrieve the contents\
      \ of the website. \nThis will be a String, but in JSON format. Use the auxiliary\
      \ function you created above. */"
    initial_state:
      length: 166
      offset: 840
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: '        String result = getURLSource(url);'
  - offset: 1022
    length: 44
    placeholder_text: "/* TODO \nRemember to return a JSON object.*/"
    initial_state:
      length: 44
      offset: 1022
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: (JsonObject) Jsoner.deserialize(result, new JsonObject())
  - offset: 1217
    length: 43
    placeholder_text: "/* TODO \nFill in this data type (Object) */"
    initial_state:
      length: 43
      offset: 1217
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: URL
  - offset: 1271
    length: 41
    placeholder_text: |-
      /* TODO
      Fill in this datatype (Object) */
    initial_state:
      length: 41
      offset: 1271
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: URL
  - offset: 1349
    length: 52
    placeholder_text: |-
      /* TODO
      Read the information coming from the web
       */
    initial_state:
      length: 52
      offset: 1349
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: ' String result = getURLSource(url);'
  - offset: 1417
    length: 42
    placeholder_text: "/* TODO \nreturn the appropriate result.\n*/"
    initial_state:
      length: 42
      offset: 1417
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: (JsonObject) Jsoner.deserialize(result, new JsonObject());
  - offset: 1559
    length: 207
    placeholder_text: "/* TODO \nThis should return a String with each show in four\
      \ fields:\nName:the name of the show\nLink:the link to the show\nrating average:The\
      \ rating average of teh show, and \nsummary, the summary of the show.*/"
    initial_state:
      length: 207
      offset: 1559
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      JsonArray shows = (JsonArray) doc.get("result");
              for(Object r : shows){
                  JsonObject obj = (JsonObject) ((JsonObject) r).get("show");
                  results += "Name:"+(String)obj.get("name")+"\n";
                  results += "Link:"+(String)obj.get("url")+"\n";
                  results += "Premiered:"+(String)obj.get("premiered")+"\n";
                  results += "Rating average:"+(BigDecimal)((JsonObject)obj.get("rating")).get("average")+"\n";
                  results += "Summary:"+(String)obj.get("summary")+"\n";
              }
  - offset: 1862
    length: 116
    placeholder_text: "/* TODO\nGiven a String with some text in it, write that text\
      \ to a file. \nThe name of the file is given in outfile */"
    initial_state:
      length: 116
      offset: 1862
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      try(DataOutputStream out = new DataOutputStream(new FileOutputStream(outfile))){
                  out.writeBytes(text);
              }catch(IOException e){
                  e.printStackTrace();
              }
  text: "import com.github.cliftonlabs.json_simple.JsonArray;\nimport com.github.cliftonlabs.json_simple.JsonObject;\n\
    import com.github.cliftonlabs.json_simple.Jsoner;\nimport java.io.DataOutputStream;\n\
    import java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.math.BigDecimal;\n\
    import java.net.URL;\nimport java.util.Scanner;\n\npublic class TVShowsDatabase\
    \ {\n\n    String baseUrl = \"http://api.tvmaze.com/search/\";\n\nCreate a method\
    \ getURLSource that returns a String and gets a URL object as a parameter. It\
    \ should also throw an exception.\nThis method should read the open stream of\
    \ the url and concatenate it in a String. It should then return that String.\n\
    \n    public JsonObject getShowsByName(String name) throws Exception\n    {\n\
    \        //Getting the things ready to connect to the web\n        URL url = new\
    \ URL(baseUrl+\"shows?q=\"+name);\n/* TODO \nYou have to use the url to retrieve\
    \ the contents of the website. \nThis will be a String, but in JSON format. Use\
    \ the auxiliary function you created above. */\n        return /* TODO \nRemember\
    \ to return a JSON object.*/;\n    }\n\n\n    public JsonObject getPeopleInShows(String\
    \ query) throws Exception\n    {\n        //Getting the things ready to connect\
    \ to the web\n        /* TODO \nFill in this data type (Object) */ url = new /*\
    \ TODO\nFill in this datatype (Object) */(baseUrl+\"people?q=\"+query);\n\n  \
    \     /* TODO\nRead the information coming from the web\n */\n        return /*\
    \ TODO \nreturn the appropriate result.\n*/\n    }\n\n\n    public String formatShowAsString(JsonObject\
    \ doc){\n        String results = \"\";\n        /* TODO \nThis should return\
    \ a String with each show in four fields:\nName:the name of the show\nLink:the\
    \ link to the show\nrating average:The rating average of teh show, and \nsummary,\
    \ the summary of the show.*/\n        return results;\n    }\n\n    public void\
    \ saveShows(String text, String outfile){\n        /* TODO\nGiven a String with\
    \ some text in it, write that text to a file. \nThe name of the file is given\
    \ in outfile */\n    }\n\n}\n"
  learner_created: false
status: Unchecked
record: -1
